name: Build

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        # INFO: This is only a workaround to avoid timeout issues with the CI;
        # whether it becomes a definitive solution or not will require a
        # separate discussion with Oscar.
        cycle:
          - "all-1.7"
          - "all-1.6"
          - "all-1.5"
          - "all-1.4"
          - "all-1.3"
          - "all-1.2"
          - "all-1.1"
          - "all-1.0"
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v25
      - name: Setup Cachix
        uses: cachix/cachix-action@v14
        with:
          name: nixpkgs-terraform
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          skipPush: false
      - name: Build packages
        run: |
          if grep -q authToken ~/.config/cachix/cachix.dhall; then
            echo "Cachix token is present"
            cachix watch-exec nixpkgs-terraform nix -- build .#\"${{ matrix.cycle }}\" --impure
          else
            echo "Cachix token is not present"
            nix build .#\"${{ matrix.cycle }}\" --impure
          fi
        env:
          NIXPKGS_ALLOW_UNFREE: 1

  template:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build]
    strategy:
      matrix:
        template: [default, devenv]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v25
      - name: Replace inputs on templates
        run: sed -i 's/github:stackbuilders\/nixpkgs-terraform/github:stackbuilders\/nixpkgs-terraform\/${{ github.sha }}/g' templates/*/flake.nix
      - name: Create a temporary directory
        run: echo "tmpdir=$(mktemp -d)" >> "$GITHUB_OUTPUT"
        id: mktemp
      - name: Scaffold a new project
        run: nix flake init -t ${{ github.workspace }}#${{ matrix.template }}
        working-directory: ${{ steps.mktemp.outputs.tmpdir }}
      - name: Run smoke test
        run: nix develop --accept-flake-config --impure -c terraform --version
        working-directory: ${{ steps.mktemp.outputs.tmpdir }}
        env:
          NIXPKGS_ALLOW_UNFREE: 1

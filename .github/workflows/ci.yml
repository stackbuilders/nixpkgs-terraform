name: CI

on: push

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    if: false
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check Nix flake inputs
        uses: DeterminateSystems/flake-checker-action@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v6
      - name: Setup Cachix
        uses: cachix/cachix-action@v12
        with:
          name: nixpkgs-terraform
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Build all packages
        run: nix flake check --impure
        env:
          NIXPKGS_ALLOW_UNFREE: 1

  templates:
    if: false
    strategy:
      matrix:
        template: [default, devenv]
      fail-fast: true
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v6
      - name: Replace inputs on templates
        run: sed -i 's/github:stackbuilders\/nixpkgs-terraform/github:stackbuilders\/nixpkgs-terraform\/${{ github.sha }}/g' templates/*/flake.nix
      - name: Create a temporary directory
        run: echo "tmpdir=$(mktemp -d)" >> "$GITHUB_OUTPUT"
        id: mktemp
      - name: Scaffold a new project
        run: nix flake init -t ${{ github.workspace }}#${{ matrix.template }}
        working-directory: ${{ steps.mktemp.outputs.tmpdir }}
      - name: Run smoke test
        run: nix develop --accept-flake-config --impure -c terraform --version
        env:
          NIXPKGS_ALLOW_UNFREE: 1
        working-directory: ${{ steps.mktemp.outputs.tmpdir }}

  release:
    runs-on: ubuntu-latest
    # needs: [templates]
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v6
      - name: Install tools via Nix
        run: nix develop --check
      - name: Install dependencies
        run: nix develop -c npm ci
      - name: Run semantic-release
        run: nix develop -c npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
